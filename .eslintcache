[{"D:\\Рабочий стол\\imageViewer\\src\\index.tsx":"1","D:\\Рабочий стол\\imageViewer\\src\\App.tsx":"2","D:\\Рабочий стол\\imageViewer\\src\\api\\index.ts":"3","D:\\Рабочий стол\\imageViewer\\src\\routes\\index.tsx":"4","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\index.tsx":"5","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\index.tsx":"6","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Photos\\index.tsx":"7","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\index.tsx":"8","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\index.ts":"9","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\images\\index.tsx":"10","D:\\Рабочий стол\\imageViewer\\src\\store\\index.ts":"11","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\thunk.ts":"12","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\index.tsx":"13","D:\\Рабочий стол\\imageViewer\\src\\hooks\\useThunkConnector.ts":"14","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\index.tsx":"15","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserAlbums\\index.tsx":"16","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserInfo\\index.tsx":"17","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UsersList\\index.tsx":"18","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\Paginator\\index.tsx":"19","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\ImageThumb\\index.tsx":"20","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\PreviewController\\index.tsx":"21","D:\\Рабочий стол\\imageViewer\\src\\hooks\\usePortal.ts":"22","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Album\\index.tsx":"23","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\components\\AlbumList\\index.tsx":"24","D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\index.ts":"25","D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\thunk.ts":"26","D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\index.ts":"27","D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\thunk.ts":"28","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Image\\index.tsx":"29","D:\\Рабочий стол\\imageViewer\\src\\hooks\\usePaginator.ts":"30","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UsersList\\components\\UserThumb\\index.tsx":"31"},{"size":463,"mtime":1611350635867,"results":"32","hashOfConfig":"33"},{"size":752,"mtime":1611519200646,"results":"34","hashOfConfig":"33"},{"size":1172,"mtime":1611517042425,"results":"35","hashOfConfig":"33"},{"size":111,"mtime":1611344650753,"results":"36","hashOfConfig":"33"},{"size":668,"mtime":1611516803440,"results":"37","hashOfConfig":"33"},{"size":352,"mtime":1611511582341,"results":"38","hashOfConfig":"33"},{"size":715,"mtime":1611520498170,"results":"39","hashOfConfig":"33"},{"size":889,"mtime":1611518721342,"results":"40","hashOfConfig":"33"},{"size":1540,"mtime":1611516331598,"results":"41","hashOfConfig":"33"},{"size":198,"mtime":1611345073323,"results":"42","hashOfConfig":"33"},{"size":527,"mtime":1611502456063,"results":"43","hashOfConfig":"33"},{"size":3032,"mtime":1611517063061,"results":"44","hashOfConfig":"33"},{"size":1504,"mtime":1611521570079,"results":"45","hashOfConfig":"33"},{"size":590,"mtime":1611516596136,"results":"46","hashOfConfig":"33"},{"size":2425,"mtime":1611521372474,"results":"47","hashOfConfig":"33"},{"size":1680,"mtime":1611515796843,"results":"48","hashOfConfig":"33"},{"size":402,"mtime":1611439203046,"results":"49","hashOfConfig":"33"},{"size":782,"mtime":1611516977317,"results":"50","hashOfConfig":"33"},{"size":1247,"mtime":1611498772667,"results":"51","hashOfConfig":"33"},{"size":608,"mtime":1611513671171,"results":"52","hashOfConfig":"33"},{"size":1887,"mtime":1611516886316,"results":"53","hashOfConfig":"33"},{"size":450,"mtime":1611491009201,"results":"54","hashOfConfig":"33"},{"size":890,"mtime":1611516639853,"results":"55","hashOfConfig":"33"},{"size":1517,"mtime":1611512691418,"results":"56","hashOfConfig":"33"},{"size":1268,"mtime":1611518864795,"results":"57","hashOfConfig":"33"},{"size":1695,"mtime":1611518831632,"results":"58","hashOfConfig":"33"},{"size":779,"mtime":1611519521845,"results":"59","hashOfConfig":"33"},{"size":835,"mtime":1611520498187,"results":"60","hashOfConfig":"33"},{"size":904,"mtime":1611515526755,"results":"61","hashOfConfig":"33"},{"size":420,"mtime":1611521068288,"results":"62","hashOfConfig":"33"},{"size":738,"mtime":1611516977329,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1quf6ct",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},"D:\\Рабочий стол\\imageViewer\\src\\index.tsx",[],["139","140"],"D:\\Рабочий стол\\imageViewer\\src\\App.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\api\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\routes\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\index.tsx",["141","142","143"],"import React, {FC} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './style.css'\r\nimport {HeaderImages} from \"./images\";\r\nimport {routes} from \"../../routes\";\r\n\r\nconst {\r\n    photosIcon,\r\n    albumsIcon,\r\n    usersIcon\r\n} = HeaderImages\r\n\r\nexport const Header: FC = () => {\r\n\r\n    return (\r\n        <header className='Header'>\r\n            <Link to={routes.users}>\r\n                <img src={usersIcon}/>\r\n            </Link>\r\n            <Link to={routes.albums}>\r\n                <img src={albumsIcon}/>\r\n            </Link>\r\n            <Link to={routes.photos}>\r\n                <img src={photosIcon}/>\r\n            </Link>\r\n        </header>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Photos\\index.tsx",["144"],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\index.tsx",["145"],"D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\index.ts",["146"],"import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {initialStateType} from \"./types\";\r\nimport {AlbumType, PhotosObjectType, PhotoType, UserType} from \"../types\";\r\nimport {RootState} from \"../index\";\r\n\r\nconst initialState: initialStateType = {\r\n    chosenUser: {} as UserType,\r\n    photosObject: {\r\n        photos: [],\r\n        isLoading: false\r\n    },\r\n    albums: [],\r\n    usersList: []\r\n}\r\n\r\nexport const userPageReducer = createSlice({\r\n    name: 'userPageReducer',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setUserList: (state: initialStateType, {payload}: PayloadAction<Array<UserType>>) => {\r\n            state.usersList = payload\r\n        },\r\n        setCurrentUser: (state: initialStateType, {payload}: PayloadAction<UserType>) => {\r\n            state.chosenUser = payload\r\n        },\r\n        setUserPhotos: (state: initialStateType, {payload}: PayloadAction<PhotosObjectType>) => {\r\n            state.photosObject = payload\r\n        },\r\n        setUsersAlbums: (state: initialStateType, {payload}: PayloadAction<Array<AlbumType>>) => {\r\n            state.albums = payload\r\n        },\r\n    }\r\n})\r\n\r\nexport const userPageSelectors = {\r\n    getUsersList: (state: RootState) => state.userPageReducer.usersList,\r\n    getCurrentUser: (state: RootState) => state.userPageReducer.chosenUser,\r\n    getUserPhotos: (state: RootState) => state.userPageReducer.photosObject,\r\n    getUsersAlbums: (state: RootState) => state.userPageReducer.albums,\r\n}\r\n\r\nexport const userPageActions = userPageReducer.actions","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\images\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\thunk.ts",["147","148"],"import {albumsApi, photosApi, userPageApi} from \"../../api\";\r\nimport {Dispatch} from \"react\";\r\nimport {RootState} from \"../index\";\r\nimport {userPageReducer, userPageSelectors} from \"./index\";\r\nimport {IGetPhotosByAlbum, IGetSomethingByUser} from \"../../api/types\";\r\nimport {thunkConnectorType} from \"../../hooks/useThunkConnector\";\r\n\r\nexport const userPageThunk = () => {\r\n\r\n    function getUsers() {\r\n        return async function(dispatch: Dispatch<any>) {\r\n            const response = await userPageApi.getUsers()\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserList(response.data))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getUserAlbums(props: IGetSomethingByUser, thunkConnector: thunkConnectorType) {\r\n        return async function(dispatch: Dispatch<any>) {\r\n            thunkConnector.loading.set(true)\r\n            const response = await albumsApi.getAlbumsByUser({\r\n                userId: props.userId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUsersAlbums(response.data))\r\n                    thunkConnector.loading.set(false)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPhotosByAlbum(props: IGetPhotosByAlbum) {\r\n        return async function(dispatch: Dispatch<any>) {\r\n            dispatch(userPageReducer.actions.setUserPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await photosApi.getPhotosByAlbum({\r\n                albumId: props.albumId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPhotosByUser(props: IGetSomethingByUser) {\r\n        return async function(dispatch: Dispatch<any>) {\r\n            dispatch(userPageReducer.actions.setUserPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await photosApi.getPhotosByUser({\r\n                userId: props.userId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        getUsers,\r\n        getUserAlbums,\r\n        getPhotosByAlbum,\r\n        getPhotosByUser\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\index.tsx",["149","150"],"D:\\Рабочий стол\\imageViewer\\src\\hooks\\useThunkConnector.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\index.tsx",["151"],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserAlbums\\index.tsx",["152","153"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {useThunkConnector} from \"../../../../../../../hooks/useThunkConnector\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userPageSelectors} from \"../../../../../../../store/userPageReducer\";\r\nimport {userPageThunk} from \"../../../../../../../store/userPageReducer/thunk\";\r\nimport {AlbumType} from \"../../../../../../../store/types\";\r\nimport albumIcon from './images/album.png'\r\nimport {Album} from \"../../../../../../ui/Album\";\r\n\r\nexport const UserAlbums: FC = () => {\r\n    /* state */\r\n    const albumsThunkConnector = useThunkConnector()\r\n    const currentUser = useSelector(userPageSelectors.getCurrentUser)\r\n    const userAlbums = useSelector(userPageSelectors.getUsersAlbums)\r\n    const userThunk = userPageThunk()\r\n    const dispatch = useDispatch()\r\n\r\n    /* methods */\r\n    const getUserPhotos = (album: AlbumType) => {\r\n        dispatch(userThunk.getPhotosByAlbum({\r\n            albumId: Number(album.id)\r\n        }))\r\n    }\r\n\r\n    /* effects */\r\n    useEffect(()=>{\r\n        if (!currentUser) return\r\n        dispatch(userThunk.getUserAlbums({\r\n            userId: Number(currentUser.id)\r\n        }, albumsThunkConnector))\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <>\r\n            <div className='UserAlbums__title'>Albums</div>\r\n            <div className='UserAlbums'>\r\n                {albumsThunkConnector.loading.get\r\n                    ? <div>Loading...</div>\r\n                    : userAlbums.map(item => (\r\n                        <Album album={item} onClick={getUserPhotos}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserInfo\\index.tsx",["154","155"],"import React, {FC} from \"react\";\r\nimport {UserType} from \"../../../../../../../store/types\";\r\nimport './style.css'\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}\r\nexport const UserInfo:FC<PropsType> = ({user}) => {\r\n\r\n    return (\r\n        <div className='UserPage__metadata'>\r\n            <h3>{user.name}</h3>\r\n            <a>{user.email}</a>\r\n            <a>{user.website}</a>\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UsersList\\index.tsx",["156"],"import React, {FC, useEffect} from 'react'\r\nimport {UserThumb} from \"./components/UserThumb\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userPageSelectors} from \"../../../../../store/userPageReducer\";\r\nimport {userPageThunk} from \"../../../../../store/userPageReducer/thunk\";\r\n\r\nexport const UserList:FC = () => {\r\n    /* state */\r\n    const users = useSelector(userPageSelectors.getUsersList)\r\n    const dispatch = useDispatch()\r\n    const userThunk = userPageThunk()\r\n\r\n    /* initial effect */\r\n    useEffect(()=>{\r\n        dispatch(userThunk.getUsers())\r\n    }, [])\r\n\r\n    return (\r\n        <div className='Users__list'>\r\n            {users.map((user, index) =>\r\n                <UserThumb key={index} user={user}/>\r\n            )}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\Paginator\\index.tsx",["157","158","159","160","161","162"],"import React, {FC, useEffect, useState} from 'react'\r\nimport './style.css'\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    currentPage: number,\r\n    setCurrentPage: (page: number) => void,\r\n    pagination: number[],\r\n    setPagination: (value: number[]) => void\r\n}\r\nexport const Paginator:FC<PropsType> = (props) => {\r\n    /* state */\r\n    const {\r\n        currentPage,\r\n        setCurrentPage,\r\n        pagination,\r\n        setPagination\r\n    } = props\r\n\r\n    /* methods */\r\n    const setPage = (page:number, index:number) => {\r\n        if (index==2) {\r\n            setPagination(pagination.map(p=>p+1))\r\n        }\r\n        if (index==0 && page!=0) {\r\n            setPagination(pagination.map(p=>p-1))\r\n        }\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    return (\r\n        <div className='ImageViewer__pagination'>\r\n            {pagination.map((item, index) => (\r\n                <div\r\n                    className={cn('ImageViewer__pagination-item', {\r\n                        'ImageViewer__pagination-item--active': item == currentPage\r\n                    })}\r\n                    onClick={()=>setPage(item, index)}\r\n                >\r\n                    {item+1}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\ImageThumb\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\PreviewController\\index.tsx",["163","164","165"],"import React, {FC} from 'react'\r\nimport './style.css'\r\nimport {usePortal} from \"../../../../../hooks/usePortal\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {PhotosObjectType} from \"../../../../../store/types\";\r\nimport {Image} from \"../../../Image\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {albumsReducerActions} from \"../../../../../store/albumsReducer\";\r\n\r\ntype PropsType = {\r\n    photosObject: PhotosObjectType,\r\n    chosenImage: number | undefined,\r\n    chooseImageHandler: (value: number | undefined) => void\r\n}\r\nexport const PreviewController: FC<PropsType> = (props) => {\r\n    /* state */\r\n    const {\r\n        photosObject,\r\n        chosenImage,\r\n        chooseImageHandler\r\n    } = props\r\n    const target = usePortal('App')\r\n\r\n    /* methods */\r\n    const closePreview = () => {\r\n        chooseImageHandler(undefined)\r\n    }\r\n    const nextImage = () => {\r\n        const current = Number(chosenImage)\r\n        chooseImageHandler((current+1)%photosObject.photos.length)\r\n    }\r\n    const prevImage = () => {\r\n        const current = Number(chosenImage)\r\n        chooseImageHandler(current ? current-1 : 0)\r\n    }\r\n\r\n    if (chosenImage === undefined) return <></>\r\n    return ReactDOM.createPortal(\r\n        <div className='PreviewController'>\r\n            <button\r\n                className='PreviewController__close'\r\n                onClick={closePreview}\r\n            >\r\n                Close\r\n            </button>\r\n            <div className='PreviewController__image-block'>\r\n                <span onClick={prevImage}/>\r\n                <Image\r\n                    src={photosObject.photos[chosenImage].url as string}\r\n                    title={photosObject.photos[chosenImage].title as string}\r\n                />\r\n                <span onClick={nextImage}/>\r\n            </div>\r\n        </div>,\r\n        target)\r\n}","D:\\Рабочий стол\\imageViewer\\src\\hooks\\usePortal.ts",["166"],"import React, {useEffect} from \"react\";\r\n\r\n\r\nexport const usePortal = (id: string) => {\r\n    const rootElemRef = React.useRef(document.createElement('div'));\r\n\r\n    useEffect(() => {\r\n        const parentElem = document.querySelector(`#${id}`);\r\n        parentElem?.appendChild(rootElemRef.current);\r\n        return function removeElement() {\r\n            rootElemRef.current.remove();\r\n        };\r\n    }, [id]);\r\n\r\n    return rootElemRef.current;\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Album\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\components\\AlbumList\\index.tsx",["167","168"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {albumsReducerActions, albumsReducerSelectors} from \"../../../../../store/albumsReducer\";\r\nimport {albumsThunk} from \"../../../../../store/albumsReducer/thunk\";\r\nimport {useThunkConnector} from \"../../../../../hooks/useThunkConnector\";\r\nimport {Album} from \"../../../../ui/Album\";\r\nimport {AlbumType} from \"../../../../../store/types\";\r\n\r\nexport const AlbumList:FC = () => {\r\n    /* state */\r\n    const albums = useSelector(albumsReducerSelectors.getAlbums)\r\n    const thunk = albumsThunk()\r\n    const dispatch = useDispatch()\r\n    const thunkConnector = useThunkConnector()\r\n    const currentAlbum = useSelector(albumsReducerSelectors.getCurrentAlbum)\r\n\r\n    /* methods */\r\n    const setAlbum = (album: AlbumType) => {\r\n        dispatch(thunk.getPhotosByAlbum({\r\n            albumId: Number(album.id)\r\n        }))\r\n        dispatch(albumsReducerActions.setCurrentAlbum(album))\r\n    }\r\n\r\n\r\n    /* effects */\r\n    useEffect(()=>{\r\n        dispatch(thunk.getAlbums(thunkConnector))\r\n        if (currentAlbum.id) {\r\n            setAlbum(currentAlbum)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className='AlbumList'>\r\n            {albums.map((album, index) => (\r\n                <Album\r\n                    album={album}\r\n                    onClick={setAlbum}\r\n                    isActive={currentAlbum.id == album.id}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\thunk.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\thunk.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Image\\index.tsx",["169"],"import React, {FC, HTMLAttributes, useEffect, useState} from \"react\";\r\nimport cn from \"classnames\";\r\nimport './style.css'\r\n\r\ntype PropsType = {\r\n    src: string,\r\n    title?: string\r\n} & HTMLAttributes<HTMLImageElement>\r\nexport const Image:FC<PropsType> = (props) => {\r\n    const {\r\n        src,\r\n        title\r\n    } = props\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    /* methods */\r\n    const onLoad = () => {\r\n        setLoading(false)\r\n    }\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n    }, [src])\r\n\r\n    return (\r\n        <div className={cn('Image', {\r\n            'Image--loading': loading\r\n        })}>\r\n            <div className='Image__loading'/>\r\n            <img\r\n                onLoad={onLoad}\r\n                src={src}\r\n                onClick={props.onClick}\r\n            />\r\n            {title && <div className='Image__title'>{title}</div>}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\hooks\\usePaginator.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UsersList\\components\\UserThumb\\index.tsx",["170"],"import React, {FC} from 'react'\r\nimport userIcon from './images/userIcon.svg'\r\nimport './style.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {userPageActions} from \"../../../../../../../store/userPageReducer\";\r\nimport {UserType} from \"../../../../../../../store/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}\r\nexport const UserThumb: FC<PropsType> = (props) => {\r\n    /* state */\r\n    const dispatch = useDispatch()\r\n\r\n    /* methods */\r\n    const chooseUser = () => {\r\n        dispatch(userPageActions.setCurrentUser(props.user))\r\n    }\r\n\r\n    return (\r\n        <div tabIndex={0} onClick={chooseUser} className='UserThumb'>\r\n            <img src={userIcon}/>\r\n            <b>{props.user.name}</b>\r\n        </div>\r\n    )\r\n}",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":18,"column":17,"nodeType":"177","endLine":18,"endColumn":39},{"ruleId":"175","severity":1,"message":"176","line":21,"column":17,"nodeType":"177","endLine":21,"endColumn":40},{"ruleId":"175","severity":1,"message":"176","line":24,"column":17,"nodeType":"177","endLine":24,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":15,"column":8,"nodeType":"180","endLine":15,"endColumn":10,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":20,"column":7,"nodeType":"180","endLine":20,"endColumn":9,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":38,"nodeType":"186","messageId":"187","endLine":3,"endColumn":47},{"ruleId":"184","severity":1,"message":"188","line":3,"column":9,"nodeType":"186","messageId":"187","endLine":3,"endColumn":18},{"ruleId":"184","severity":1,"message":"189","line":4,"column":26,"nodeType":"186","messageId":"187","endLine":4,"endColumn":43},{"ruleId":"178","severity":1,"message":"190","line":32,"column":8,"nodeType":"180","endLine":32,"endColumn":21,"suggestions":"191"},{"ruleId":"178","severity":1,"message":"192","line":35,"column":8,"nodeType":"180","endLine":35,"endColumn":10,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"194","line":37,"column":8,"nodeType":"180","endLine":37,"endColumn":22,"suggestions":"195"},{"ruleId":"184","severity":1,"message":"196","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":17},{"ruleId":"178","severity":1,"message":"197","line":32,"column":8,"nodeType":"180","endLine":32,"endColumn":21,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":13,"column":13,"nodeType":"177","endLine":13,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":14,"column":13,"nodeType":"177","endLine":14,"endColumn":16},{"ruleId":"178","severity":1,"message":"201","line":16,"column":8,"nodeType":"180","endLine":16,"endColumn":10,"suggestions":"202"},{"ruleId":"184","severity":1,"message":"203","line":1,"column":20,"nodeType":"186","messageId":"187","endLine":1,"endColumn":29},{"ruleId":"184","severity":1,"message":"204","line":1,"column":31,"nodeType":"186","messageId":"187","endLine":1,"endColumn":39},{"ruleId":"205","severity":1,"message":"206","line":22,"column":18,"nodeType":"207","messageId":"208","endLine":22,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":25,"column":18,"nodeType":"207","messageId":"208","endLine":25,"endColumn":20},{"ruleId":"205","severity":1,"message":"209","line":25,"column":29,"nodeType":"207","messageId":"208","endLine":25,"endColumn":31},{"ruleId":"205","severity":1,"message":"206","line":36,"column":70,"nodeType":"207","messageId":"208","endLine":36,"endColumn":72},{"ruleId":"184","severity":1,"message":"210","line":5,"column":9,"nodeType":"186","messageId":"187","endLine":5,"endColumn":19},{"ruleId":"184","severity":1,"message":"211","line":8,"column":9,"nodeType":"186","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"184","severity":1,"message":"212","line":9,"column":9,"nodeType":"186","messageId":"187","endLine":9,"endColumn":29},{"ruleId":"178","severity":1,"message":"213","line":11,"column":25,"nodeType":"186","endLine":11,"endColumn":32},{"ruleId":"178","severity":1,"message":"214","line":33,"column":7,"nodeType":"180","endLine":33,"endColumn":9,"suggestions":"215"},{"ruleId":"205","severity":1,"message":"206","line":41,"column":47,"nodeType":"207","messageId":"208","endLine":41,"endColumn":49},{"ruleId":"175","severity":1,"message":"176","line":29,"column":13,"nodeType":"177","endLine":33,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":22,"column":13,"nodeType":"177","endLine":22,"endColumn":34},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'thunk'. Either include them or remove the dependency array.","ArrayExpression",["218"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["219"],"@typescript-eslint/no-unused-vars","'PhotoType' is defined but never used.","Identifier","unusedVar","'RootState' is defined but never used.","'userPageSelectors' is defined but never used.","React Hook useEffect has missing dependencies: 'cleanPhotos', 'dispatch', and 'thunk'. Either include them or remove the dependency array.",["220"],"React Hook useEffect has a missing dependency: 'cleanPhotos'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has a missing dependency: 'paginator'. Either include it or remove the dependency array.",["222"],"'albumIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'albumsThunkConnector', 'dispatch', and 'userThunk'. Either include them or remove the dependency array.",["223"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'dispatch' and 'userThunk'. Either include them or remove the dependency array.",["224"],"'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useHistory' is defined but never used.","'useDispatch' is defined but never used.","'albumsReducerActions' is defined but never used.","The ref value 'rootElemRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'rootElemRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'currentAlbum', 'dispatch', 'setAlbum', 'thunk', and 'thunkConnector'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [dispatch, thunk]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [cleanPhotos, currentUser, dispatch, thunk]",{"range":"246","text":"247"},"Update the dependencies array to be: [cleanPhotos]",{"range":"248","text":"249"},"Update the dependencies array to be: [paginator, photosObject]",{"range":"250","text":"251"},"Update the dependencies array to be: [albumsThunkConnector, currentUser, dispatch, userThunk]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, userThunk]",{"range":"254","text":"255"},"Update the dependencies array to be: [currentAlbum, dispatch, setAlbum, thunk, thunkConnector]",{"range":"256","text":"257"},[564,566],"[dispatch, thunk]",[677,679],"[dispatch]",[1099,1112],"[cleanPhotos, currentUser, dispatch, thunk]",[1171,1173],"[cleanPhotos]",[1216,1230],"[paginator, photosObject]",[1230,1243],"[albumsThunkConnector, currentUser, dispatch, userThunk]",[587,589],"[dispatch, userThunk]",[1194,1196],"[currentAlbum, dispatch, setAlbum, thunk, thunkConnector]"]