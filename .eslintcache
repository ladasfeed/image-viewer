[{"D:\\Рабочий стол\\imageViewer\\src\\index.tsx":"1","D:\\Рабочий стол\\imageViewer\\src\\App.tsx":"2","D:\\Рабочий стол\\imageViewer\\src\\api\\index.ts":"3","D:\\Рабочий стол\\imageViewer\\src\\routes\\index.tsx":"4","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\index.tsx":"5","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\index.tsx":"6","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Photos\\index.tsx":"7","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\index.tsx":"8","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\index.ts":"9","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\images\\index.tsx":"10","D:\\Рабочий стол\\imageViewer\\src\\store\\index.ts":"11","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\thunk.ts":"12","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\UserThumb\\index.tsx":"13","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\index.tsx":"14","D:\\Рабочий стол\\imageViewer\\src\\hooks\\useThunkConnector.ts":"15","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\index.tsx":"16","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserAlbums\\index.tsx":"17","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserInfo\\index.tsx":"18"},{"size":463,"mtime":1611350635867,"results":"19","hashOfConfig":"20"},{"size":859,"mtime":1611388190430,"results":"21","hashOfConfig":"20"},{"size":869,"mtime":1611438020881,"results":"22","hashOfConfig":"20"},{"size":111,"mtime":1611344650753,"results":"23","hashOfConfig":"20"},{"size":665,"mtime":1611347504203,"results":"24","hashOfConfig":"20"},{"size":972,"mtime":1611439320640,"results":"25","hashOfConfig":"20"},{"size":175,"mtime":1611344710591,"results":"26","hashOfConfig":"20"},{"size":175,"mtime":1611344727562,"results":"27","hashOfConfig":"20"},{"size":2005,"mtime":1611437167735,"results":"28","hashOfConfig":"20"},{"size":198,"mtime":1611345073323,"results":"29","hashOfConfig":"20"},{"size":329,"mtime":1611350932313,"results":"30","hashOfConfig":"20"},{"size":2421,"mtime":1611438116500,"results":"31","hashOfConfig":"20"},{"size":783,"mtime":1611433567625,"results":"32","hashOfConfig":"20"},{"size":1115,"mtime":1611439215702,"results":"33","hashOfConfig":"20"},{"size":596,"mtime":1611434737957,"results":"34","hashOfConfig":"20"},{"size":640,"mtime":1611439320679,"results":"35","hashOfConfig":"20"},{"size":1456,"mtime":1611437938252,"results":"36","hashOfConfig":"20"},{"size":402,"mtime":1611439203046,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1quf6ct",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Рабочий стол\\imageViewer\\src\\index.tsx",[],["82","83"],"D:\\Рабочий стол\\imageViewer\\src\\App.tsx",["84","85"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom'\nimport {routes} from \"./routes\";\nimport {Header} from \"./components/Header\";\nimport {Users} from \"./components/pages/Users\";\nimport {Albums} from \"./components/pages/Albums\";\nimport {Photos} from \"./components/pages/Photos\";\nimport './components/ui/style/style.css'\nimport {userPageApi} from \"./api\";\n\nfunction App() {\n\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Route path={routes.users}>\n                <Users/>\n            </Route>\n            <Route path={routes.albums}>\n                <Albums/>\n            </Route>\n            <Route path={routes.photos}>\n                <Photos/>\n            </Route>\n            <Route exact path={routes.root}>\n\n            </Route>\n        </div>\n    );\n}\n\nexport default App;\n","D:\\Рабочий стол\\imageViewer\\src\\api\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\routes\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\index.tsx",["86","87","88"],"import React, {FC} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './style.css'\r\nimport {HeaderImages} from \"./images\";\r\nimport {routes} from \"../../routes\";\r\nconst {\r\n    photosIcon,\r\n    albumsIcon,\r\n    usersIcon\r\n} = HeaderImages\r\n\r\nexport const Header:FC = () => {\r\n\r\n    return (\r\n        <header className='Header'>\r\n            <Link to={routes.users}>\r\n                <img src={usersIcon}/>\r\n            </Link>\r\n            <Link to={routes.albums}>\r\n                <img src={albumsIcon}/>\r\n            </Link>\r\n            <Link to={routes.photos}>\r\n                <img src={photosIcon}/>\r\n            </Link>\r\n        </header>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\index.tsx",["89","90"],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Photos\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\images\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\thunk.ts",["91","92"],"import {userPageApi} from \"../../api\";\r\nimport {Dispatch} from \"react\";\r\nimport {RootState} from \"../index\";\r\nimport {userPageReducer, userPageSelectors} from \"./index\";\r\nimport {IGetPhotosByAlbum, IGetSomethingByUser} from \"../../api/types\";\r\nimport {thunkConnectorType} from \"../../hooks/useThunkConnector\";\r\n\r\nexport const userPageThunk = () => {\r\n\r\n    function getUsers() {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            const response = await userPageApi.getUsers()\r\n            console.log(response)\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserList(response.data))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getUserAlbums(props: IGetSomethingByUser, thunkConnector: thunkConnectorType) {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            thunkConnector.loading.set(true)\r\n            const response = await userPageApi.getAlbumsByUser({\r\n                userId: props.userId\r\n            })\r\n            console.log(response)\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUsersAlbums(response.data))\r\n                    thunkConnector.loading.set(false)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPhotosByAlbum(props: IGetPhotosByAlbum) {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            dispatch(userPageReducer.actions.setUserPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await userPageApi.getPhotosByAlbum({\r\n                albumId: props.albumId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        getUsers,\r\n        getUserAlbums,\r\n        getPhotosByAlbum\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\UserThumb\\index.tsx",["93","94"],"import React, {FC} from 'react'\r\nimport userIcon from './images/userIcon.svg'\r\nimport './style.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {userPageThunk} from \"../../../store/userPageReducer/thunk\";\r\nimport {userPageActions} from \"../../../store/userPageReducer\";\r\nimport {UserType} from \"../../../store/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}\r\nexport const UserThumb: FC<PropsType> = (props) => {\r\n    /* state */\r\n    const dispatch = useDispatch()\r\n\r\n    /* methods */\r\n    const chooseUser = () => {\r\n        dispatch(userPageActions.setCurrentUser(props.user))\r\n    }\r\n\r\n    return (\r\n        <div tabIndex={0} onClick={chooseUser} className='UserThumb'>\r\n            <img src={userIcon}/>\r\n            <b>{props.user.name}</b>\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\index.tsx",["95"],"D:\\Рабочий стол\\imageViewer\\src\\hooks\\useThunkConnector.ts",["96"],"import React, {useState} from 'react'\r\n\r\nexport type thunkConnectorType = {\r\n    loading: {\r\n        set: (value: boolean) => void,\r\n        get: boolean\r\n    },\r\n    error: {\r\n        set: (value: string) => void,\r\n        get: string\r\n    }\r\n}\r\nexport const useThunkConnector = ():thunkConnectorType => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    return {\r\n        loading: {\r\n            set: setLoading,\r\n            get: loading\r\n        },\r\n        error: {\r\n            set: setError,\r\n            get: error\r\n        }\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\index.tsx",["97","98","99"],"import React, {FC} from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {PhotosObjectType, PhotoType} from \"../../../store/types\";\r\n\r\ntype PropsType = {\r\n    photosObject: PhotosObjectType\r\n}\r\nexport const ImageViewer:FC<PropsType> = (props) => {\r\n    const {\r\n        photosObject\r\n    } = props\r\n\r\n    if (!photosObject) return (\r\n        <div>Choose album</div>\r\n    )\r\n\r\n    return (\r\n        <div className='ImageViewer'>\r\n            {props.photosObject.photos.map((photo, index) => (\r\n                <img\r\n                    alt='Photo'\r\n                    key={index}\r\n                    src={photo.url as string}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserAlbums\\index.tsx",["100"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {useThunkConnector} from \"../../../../../../../hooks/useThunkConnector\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userPageSelectors} from \"../../../../../../../store/userPageReducer\";\r\nimport {userPageThunk} from \"../../../../../../../store/userPageReducer/thunk\";\r\n\r\n\r\nexport const UserAlbums: FC = () => {\r\n    /* state */\r\n    const albumsThunkConnector = useThunkConnector()\r\n    const currentUser = useSelector(userPageSelectors.getCurrentUser)\r\n    const userAlbums = useSelector(userPageSelectors.getUsersAlbums)\r\n    const userThunk = userPageThunk()\r\n    const dispatch = useDispatch()\r\n\r\n    /* methods */\r\n    const getUserPhotos = (albumId: number) => {\r\n        dispatch(userThunk.getPhotosByAlbum({\r\n            albumId\r\n        }))\r\n    }\r\n\r\n    /* effects */\r\n    useEffect(()=>{\r\n        if (!currentUser) return\r\n        dispatch(userThunk.getUserAlbums({\r\n            userId: Number(currentUser.id)\r\n        }, albumsThunkConnector))\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div className='UserAlbums'>\r\n            {albumsThunkConnector.loading.get\r\n                ? <div>Loading...</div>\r\n                : userAlbums.map(item => (\r\n                    <div onClick={()=>getUserPhotos(Number(item.id))}>\r\n                        {item.title}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserInfo\\index.tsx",["101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":10,"column":9,"nodeType":"109","messageId":"110","endLine":10,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":17,"column":17,"nodeType":"114","endLine":17,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":20,"column":17,"nodeType":"114","endLine":20,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":23,"column":17,"nodeType":"114","endLine":23,"endColumn":40},{"ruleId":"107","severity":1,"message":"115","line":3,"column":9,"nodeType":"109","messageId":"110","endLine":3,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":18,"column":8,"nodeType":"118","endLine":18,"endColumn":10,"suggestions":"119"},{"ruleId":"107","severity":1,"message":"120","line":4,"column":26,"nodeType":"109","messageId":"110","endLine":4,"endColumn":43},{"ruleId":"107","severity":1,"message":"121","line":42,"column":14,"nodeType":"109","messageId":"110","endLine":42,"endColumn":30},{"ruleId":"107","severity":1,"message":"122","line":5,"column":9,"nodeType":"109","messageId":"110","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":23,"column":13,"nodeType":"114","endLine":23,"endColumn":34},{"ruleId":"116","severity":1,"message":"123","line":22,"column":8,"nodeType":"118","endLine":22,"endColumn":21,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"125","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"126","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"127","line":3,"column":27,"nodeType":"109","messageId":"110","endLine":3,"endColumn":36},{"ruleId":"128","severity":1,"message":"129","line":20,"column":17,"nodeType":"114","endLine":24,"endColumn":19},{"ruleId":"116","severity":1,"message":"130","line":30,"column":8,"nodeType":"118","endLine":30,"endColumn":21,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":13,"column":13,"nodeType":"114","endLine":13,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":14,"column":13,"nodeType":"114","endLine":14,"endColumn":16},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userPageApi' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userPageActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userThunk'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'userPageSelectors' is defined but never used.","'getPhotosByAlbum' is defined but never used.","'userPageThunk' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["137"],"'React' is defined but never used.","'useSelector' is defined but never used.","'PhotoType' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'albumsThunkConnector', 'dispatch', and 'userThunk'. Either include them or remove the dependency array.",["138"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [dispatch, userThunk]",{"range":"145","text":"146"},"Update the dependencies array to be: [currentUser, dispatch]",{"range":"147","text":"148"},"Update the dependencies array to be: [albumsThunkConnector, currentUser, dispatch, userThunk]",{"range":"149","text":"150"},[656,658],"[dispatch, userThunk]",[773,786],"[currentUser, dispatch]",[1057,1070],"[albumsThunkConnector, currentUser, dispatch, userThunk]"]