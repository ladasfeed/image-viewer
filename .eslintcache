[{"D:\\Рабочий стол\\imageViewer\\src\\index.tsx":"1","D:\\Рабочий стол\\imageViewer\\src\\App.tsx":"2","D:\\Рабочий стол\\imageViewer\\src\\api\\index.ts":"3","D:\\Рабочий стол\\imageViewer\\src\\routes\\index.tsx":"4","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\index.tsx":"5","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\index.tsx":"6","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Photos\\index.tsx":"7","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\index.tsx":"8","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\index.ts":"9","D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\images\\index.tsx":"10","D:\\Рабочий стол\\imageViewer\\src\\store\\index.ts":"11","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\thunk.ts":"12","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\UserThumb\\index.tsx":"13","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\index.tsx":"14","D:\\Рабочий стол\\imageViewer\\src\\hooks\\useThunkConnector.ts":"15","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\index.tsx":"16","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserAlbums\\index.tsx":"17","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserInfo\\index.tsx":"18","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UsersList\\index.tsx":"19","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\Paginator\\index.tsx":"20","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\ImageThumb\\index.tsx":"21","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\PreviewController\\index.tsx":"22","D:\\Рабочий стол\\imageViewer\\src\\hooks\\usePortal.ts":"23","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Album\\index.tsx":"24","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\components\\AlbumList\\index.tsx":"25","D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\index.ts":"26","D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\thunk.ts":"27","D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\index.ts":"28","D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\thunk.ts":"29","D:\\Рабочий стол\\imageViewer\\src\\helpers\\AnimatedLink\\index.tsx":"30","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Image\\index.tsx":"31"},{"size":463,"mtime":1611350635867,"results":"32","hashOfConfig":"33"},{"size":868,"mtime":1611491048341,"results":"34","hashOfConfig":"33"},{"size":1172,"mtime":1611500053475,"results":"35","hashOfConfig":"33"},{"size":111,"mtime":1611344650753,"results":"36","hashOfConfig":"33"},{"size":723,"mtime":1611511594498,"results":"37","hashOfConfig":"33"},{"size":352,"mtime":1611511582341,"results":"38","hashOfConfig":"33"},{"size":781,"mtime":1611511607332,"results":"39","hashOfConfig":"33"},{"size":889,"mtime":1611512466627,"results":"40","hashOfConfig":"33"},{"size":2005,"mtime":1611437167735,"results":"41","hashOfConfig":"33"},{"size":198,"mtime":1611345073323,"results":"42","hashOfConfig":"33"},{"size":527,"mtime":1611502456063,"results":"43","hashOfConfig":"33"},{"size":3158,"mtime":1611496933603,"results":"44","hashOfConfig":"33"},{"size":783,"mtime":1611433567625,"results":"45","hashOfConfig":"33"},{"size":1504,"mtime":1611511662841,"results":"46","hashOfConfig":"33"},{"size":596,"mtime":1611434737957,"results":"47","hashOfConfig":"33"},{"size":2716,"mtime":1611513037227,"results":"48","hashOfConfig":"33"},{"size":1680,"mtime":1611515796843,"results":"49","hashOfConfig":"33"},{"size":402,"mtime":1611439203046,"results":"50","hashOfConfig":"33"},{"size":784,"mtime":1611441118295,"results":"51","hashOfConfig":"33"},{"size":1247,"mtime":1611498772667,"results":"52","hashOfConfig":"33"},{"size":608,"mtime":1611513671171,"results":"53","hashOfConfig":"33"},{"size":1911,"mtime":1611515448758,"results":"54","hashOfConfig":"33"},{"size":450,"mtime":1611491009201,"results":"55","hashOfConfig":"33"},{"size":873,"mtime":1611512525424,"results":"56","hashOfConfig":"33"},{"size":1517,"mtime":1611512691418,"results":"57","hashOfConfig":"33"},{"size":1268,"mtime":1611511996528,"results":"58","hashOfConfig":"33"},{"size":1758,"mtime":1611497799092,"results":"59","hashOfConfig":"33"},{"size":775,"mtime":1611502488166,"results":"60","hashOfConfig":"33"},{"size":952,"mtime":1611500053462,"results":"61","hashOfConfig":"33"},{"size":567,"mtime":1611511307913,"results":"62","hashOfConfig":"33"},{"size":904,"mtime":1611515526755,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1quf6ct",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Рабочий стол\\imageViewer\\src\\index.tsx",[],["143","144"],"D:\\Рабочий стол\\imageViewer\\src\\App.tsx",["145","146"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom'\nimport {routes} from \"./routes\";\nimport {Header} from \"./components/Header\";\nimport {Users} from \"./components/pages/Users\";\nimport {Albums} from \"./components/pages/Albums\";\nimport {Photos} from \"./components/pages/Photos\";\nimport './components/ui/style/style.css'\nimport {userPageApi} from \"./api\";\n\nfunction App() {\n\n\n    return (\n        <div className=\"App\" id='App'>\n            <Header/>\n            <Route path={routes.users}>\n                <Users/>\n            </Route>\n            <Route path={routes.albums}>\n                <Albums/>\n            </Route>\n            <Route path={routes.photos}>\n                <Photos/>\n            </Route>\n            <Route exact path={routes.root}>\n\n            </Route>\n        </div>\n    );\n}\n\nexport default App;\n","D:\\Рабочий стол\\imageViewer\\src\\api\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\routes\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\index.tsx",["147","148","149","150"],"import React, {FC} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './style.css'\r\nimport {HeaderImages} from \"./images\";\r\nimport {routes} from \"../../routes\";\r\nimport {AnimatedLink} from \"../../helpers/AnimatedLink\";\r\nconst {\r\n    photosIcon,\r\n    albumsIcon,\r\n    usersIcon\r\n} = HeaderImages\r\n\r\nexport const Header:FC = () => {\r\n\r\n    return (\r\n        <header className='Header'>\r\n            <Link to={routes.users}>\r\n                <img src={usersIcon}/>\r\n            </Link>\r\n            <Link to={routes.albums}>\r\n                <img src={albumsIcon}/>\r\n            </Link>\r\n            <Link to={routes.photos}>\r\n                <img src={photosIcon}/>\r\n            </Link>\r\n        </header>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Photos\\index.tsx",["151","152"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {photosPageSelectors} from \"../../../store/photosPageReducer\";\r\nimport {ImageViewer} from \"../../ui/ImageViewer\";\r\nimport {photosPageThunk} from \"../../../store/photosPageReducer/thunk\";\r\nimport {useThunkConnector} from \"../../../hooks/useThunkConnector\";\r\n\r\nexport const Photos:FC = () => {\r\n    const photosObject = useSelector(photosPageSelectors.getPhotos)\r\n    const thunk = photosPageThunk()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(thunk.getPhotos())\r\n    }, [])\r\n\r\n    return (\r\n        <section className='Photos fade-in'>\r\n            <ImageViewer photosObject={photosObject}/>\r\n        </section>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\index.tsx",["153"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {ImageViewer} from \"../../ui/ImageViewer\";\r\nimport {AlbumList} from \"./components/AlbumList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {albumsReducerActions, albumsReducerSelectors} from \"../../../store/albumsReducer\";\r\n\r\nexport const Albums:FC = () => {\r\n    const photosObject = useSelector(albumsReducerSelectors.getPhotos)\r\n    const dispatch = useDispatch()\r\n\r\n    /* clean */\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(albumsReducerActions.setPhotos({\r\n                photos: [],\r\n                isLoading: false\r\n            }))\r\n        }\r\n    },[])\r\n\r\n    /* view */\r\n    return (\r\n        <section className='Albums two-cols-container fade-in'>\r\n            <AlbumList/>\r\n            <ImageViewer photosObject={photosObject}/>\r\n        </section>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\Header\\images\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\userPageReducer\\thunk.ts",["154"],"import {photosApi, userPageApi} from \"../../api\";\r\nimport {Dispatch} from \"react\";\r\nimport {RootState} from \"../index\";\r\nimport {userPageReducer, userPageSelectors} from \"./index\";\r\nimport {IGetPhotosByAlbum, IGetSomethingByUser} from \"../../api/types\";\r\nimport {thunkConnectorType} from \"../../hooks/useThunkConnector\";\r\n\r\nexport const userPageThunk = () => {\r\n\r\n    function getUsers() {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            const response = await userPageApi.getUsers()\r\n            console.log(response)\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserList(response.data))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getUserAlbums(props: IGetSomethingByUser, thunkConnector: thunkConnectorType) {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            thunkConnector.loading.set(true)\r\n            const response = await userPageApi.getAlbumsByUser({\r\n                userId: props.userId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUsersAlbums(response.data))\r\n                    thunkConnector.loading.set(false)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPhotosByAlbum(props: IGetPhotosByAlbum) {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            dispatch(userPageReducer.actions.setUserPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await photosApi.getPhotosByAlbum({\r\n                albumId: props.albumId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPhotosByUser(props: IGetSomethingByUser) {\r\n        return async function(dispatch: Dispatch<any>, getState:()=>RootState) {\r\n            dispatch(userPageReducer.actions.setUserPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await userPageApi.getPhotosByUser({\r\n                userId: props.userId\r\n            })\r\n\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(userPageReducer.actions.setUserPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        getUsers,\r\n        getUserAlbums,\r\n        getPhotosByAlbum,\r\n        getPhotosByUser\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\UserThumb\\index.tsx",["155","156"],"import React, {FC} from 'react'\r\nimport userIcon from './images/userIcon.svg'\r\nimport './style.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {userPageThunk} from \"../../../store/userPageReducer/thunk\";\r\nimport {userPageActions} from \"../../../store/userPageReducer\";\r\nimport {UserType} from \"../../../store/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}\r\nexport const UserThumb: FC<PropsType> = (props) => {\r\n    /* state */\r\n    const dispatch = useDispatch()\r\n\r\n    /* methods */\r\n    const chooseUser = () => {\r\n        dispatch(userPageActions.setCurrentUser(props.user))\r\n    }\r\n\r\n    return (\r\n        <div tabIndex={0} onClick={chooseUser} className='UserThumb'>\r\n            <img src={userIcon}/>\r\n            <b>{props.user.name}</b>\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\index.tsx",["157","158"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userPageActions, userPageSelectors} from \"../../../../../store/userPageReducer\";\r\nimport {ImageViewer} from \"../../../../ui/ImageViewer\";\r\nimport {UserAlbums} from \"./components/UserAlbums\";\r\nimport {UserInfo} from \"./components/UserInfo\";\r\nimport {userPageThunk} from \"../../../../../store/userPageReducer/thunk\";\r\n\r\n\r\nexport const UserPage: FC = () => {\r\n    /* state */\r\n    const currentUser = useSelector(userPageSelectors.getCurrentUser)\r\n    const photosObject = useSelector(userPageSelectors.getUserPhotos)\r\n    const thunk = userPageThunk()\r\n    const dispatch = useDispatch()\r\n\r\n    /* clean */\r\n    const cleanPhotos = () => {\r\n        dispatch(userPageActions.setUserPhotos({\r\n            photos: [],\r\n            isLoading: false\r\n        }))\r\n    }\r\n    useEffect(() => {\r\n        cleanPhotos()\r\n        if (currentUser.id) {\r\n            dispatch(thunk.getPhotosByUser({\r\n                userId: Number(currentUser.id)\r\n            }))\r\n        }\r\n    }, [currentUser])\r\n    useEffect(()=>{\r\n        return cleanPhotos\r\n    }, [])\r\n\r\n    /* view */\r\n    if (currentUser.id == null) {\r\n        return <div className='UserPage--empty'>Choose user</div>\r\n    }\r\n    return (\r\n        <div className='UserPage'>\r\n            <UserInfo user={currentUser}/>\r\n            <UserAlbums/>\r\n            <ImageViewer photosObject={photosObject}/>\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\hooks\\useThunkConnector.ts",["159"],"import React, {useState} from 'react'\r\n\r\nexport type thunkConnectorType = {\r\n    loading: {\r\n        set: (value: boolean) => void,\r\n        get: boolean\r\n    },\r\n    error: {\r\n        set: (value: string) => void,\r\n        get: string\r\n    }\r\n}\r\nexport const useThunkConnector = ():thunkConnectorType => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    return {\r\n        loading: {\r\n            set: setLoading,\r\n            get: loading\r\n        },\r\n        error: {\r\n            set: setError,\r\n            get: error\r\n        }\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserAlbums\\index.tsx",["160","161"],"D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UserPage\\components\\UserInfo\\index.tsx",["162","163"],"import React, {FC} from \"react\";\r\nimport {UserType} from \"../../../../../../../store/types\";\r\nimport './style.css'\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n}\r\nexport const UserInfo:FC<PropsType> = ({user}) => {\r\n\r\n    return (\r\n        <div className='UserPage__metadata'>\r\n            <h3>{user.name}</h3>\r\n            <a>{user.email}</a>\r\n            <a>{user.website}</a>\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Users\\components\\UsersList\\index.tsx",["164"],"import React, {FC, useEffect} from 'react'\r\nimport {UserThumb} from \"../../../../ui/UserThumb\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userPageSelectors} from \"../../../../../store/userPageReducer\";\r\nimport {userPageThunk} from \"../../../../../store/userPageReducer/thunk\";\r\n\r\nexport const UserList:FC = () => {\r\n    /* state */\r\n    const users = useSelector(userPageSelectors.getUsersList)\r\n    const dispatch = useDispatch()\r\n    const userThunk = userPageThunk()\r\n\r\n    /* initial effect */\r\n    useEffect(()=>{\r\n        dispatch(userThunk.getUsers())\r\n    }, [])\r\n\r\n    return (\r\n        <div className='Users__list'>\r\n            {users.map((user, index) =>\r\n                <UserThumb key={index} user={user}/>\r\n            )}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\Paginator\\index.tsx",["165","166","167","168","169","170"],"import React, {FC, useEffect, useState} from 'react'\r\nimport './style.css'\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    currentPage: number,\r\n    setCurrentPage: (page: number) => void,\r\n    pagination: number[],\r\n    setPagination: (value: number[]) => void\r\n}\r\nexport const Paginator:FC<PropsType> = (props) => {\r\n    /* state */\r\n    const {\r\n        currentPage,\r\n        setCurrentPage,\r\n        pagination,\r\n        setPagination\r\n    } = props\r\n\r\n    /* methods */\r\n    const setPage = (page:number, index:number) => {\r\n        if (index==2) {\r\n            setPagination(pagination.map(p=>p+1))\r\n        }\r\n        if (index==0 && page!=0) {\r\n            setPagination(pagination.map(p=>p-1))\r\n        }\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    return (\r\n        <div className='ImageViewer__pagination'>\r\n            {pagination.map((item, index) => (\r\n                <div\r\n                    className={cn('ImageViewer__pagination-item', {\r\n                        'ImageViewer__pagination-item--active': item == currentPage\r\n                    })}\r\n                    onClick={()=>setPage(item, index)}\r\n                >\r\n                    {item+1}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\ImageThumb\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\ImageViewer\\components\\PreviewController\\index.tsx",["171","172","173"],"D:\\Рабочий стол\\imageViewer\\src\\hooks\\usePortal.ts",["174"],"import React, {useEffect} from \"react\";\r\n\r\n\r\nexport const usePortal = (id: string) => {\r\n    const rootElemRef = React.useRef(document.createElement('div'));\r\n\r\n    useEffect(() => {\r\n        const parentElem = document.querySelector(`#${id}`);\r\n        parentElem?.appendChild(rootElemRef.current);\r\n        return function removeElement() {\r\n            rootElemRef.current.remove();\r\n        };\r\n    }, [id]);\r\n\r\n    return rootElemRef.current;\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Album\\index.tsx",["175"],"import {AlbumType} from \"../../../store/types\";\r\nimport React, {FC} from \"react\";\r\nimport albumIcon from \"../../pages/Users/components/UserPage/components/UserAlbums/images/album.png\";\r\nimport './style.css'\r\nimport cn from \"classnames\";\r\n\r\ntype UserAlbumType = {\r\n    album: AlbumType,\r\n    onClick: (album: AlbumType) => void,\r\n    isActive?: boolean\r\n}\r\nexport const Album:FC<UserAlbumType> = (props) => {\r\n    /* state */\r\n    const {\r\n        album,\r\n        onClick,\r\n        isActive = false\r\n    } = props\r\n\r\n    /* methods */\r\n    const clickHandler = () => {\r\n        onClick(album)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={clickHandler}\r\n            className={cn('Album', {\r\n                'Album--active': isActive\r\n            })}\r\n        >\r\n            <img src={albumIcon}/>\r\n            <div>{album.title}</div>\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\components\\pages\\Albums\\components\\AlbumList\\index.tsx",["176","177"],"import React, {FC, useEffect} from 'react'\r\nimport './style.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {albumsReducerActions, albumsReducerSelectors} from \"../../../../../store/albumsReducer\";\r\nimport {albumsThunk} from \"../../../../../store/albumsReducer/thunk\";\r\nimport {useThunkConnector} from \"../../../../../hooks/useThunkConnector\";\r\nimport {Album} from \"../../../../ui/Album\";\r\nimport {AlbumType} from \"../../../../../store/types\";\r\n\r\nexport const AlbumList:FC = () => {\r\n    /* state */\r\n    const albums = useSelector(albumsReducerSelectors.getAlbums)\r\n    const thunk = albumsThunk()\r\n    const dispatch = useDispatch()\r\n    const thunkConnector = useThunkConnector()\r\n    const currentAlbum = useSelector(albumsReducerSelectors.getCurrentAlbum)\r\n\r\n    /* methods */\r\n    const setAlbum = (album: AlbumType) => {\r\n        dispatch(thunk.getPhotosByAlbum({\r\n            albumId: Number(album.id)\r\n        }))\r\n        dispatch(albumsReducerActions.setCurrentAlbum(album))\r\n    }\r\n\r\n\r\n    /* effects */\r\n    useEffect(()=>{\r\n        dispatch(thunk.getAlbums(thunkConnector))\r\n        if (currentAlbum.id) {\r\n            setAlbum(currentAlbum)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className='AlbumList'>\r\n            {albums.map((album, index) => (\r\n                <Album\r\n                    album={album}\r\n                    onClick={setAlbum}\r\n                    isActive={currentAlbum.id == album.id}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}","D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\albumsReducer\\thunk.ts",["178","179"],"import {albumsApi, photosApi} from \"../../api\";\r\nimport {Dispatch} from \"react\";\r\nimport {RootState} from \"../index\";\r\nimport {albumsReducer, albumsReducerActions} from \"./index\";\r\nimport {IGetPhotosByAlbum, IGetSomethingByUser} from \"../../api/types\";\r\nimport {thunkConnectorType} from \"../../hooks/useThunkConnector\";\r\n\r\nexport const albumsThunk = () => {\r\n\r\n    function getAlbums(thunkConnector: thunkConnectorType) {\r\n        return async function (dispatch: Dispatch<any>, getState: () => RootState) {\r\n            thunkConnector.loading.set(true)\r\n            const response = await albumsApi.getAlbums()\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(albumsReducerActions.setAlbums(response.data))\r\n                    thunkConnector.loading.set(false)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    function getPhotosByAlbum(props: IGetPhotosByAlbum) {\r\n        return async function (dispatch: Dispatch<any>, getState: () => RootState) {\r\n            dispatch(albumsReducerActions.setPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await photosApi.getPhotosByAlbum({\r\n                albumId: props.albumId\r\n            })\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(albumsReducerActions.setPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        getAlbums,\r\n        getPhotosByAlbum\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\index.ts",[],"D:\\Рабочий стол\\imageViewer\\src\\store\\photosPageReducer\\thunk.ts",["180"],"import {photosApi} from \"../../api\";\r\nimport {Dispatch} from \"react\";\r\nimport {RootState} from \"../index\";\r\nimport {photosPageAction} from \"./index\";\r\nimport {IGetPhotosByAlbum} from \"../../api/types\";\r\n\r\nexport const photosPageThunk = () => {\r\n\r\n\r\n    function getPhotos() {\r\n        return async function (dispatch: Dispatch<any>, getState: () => RootState) {\r\n            dispatch(photosPageAction.setPhotos({\r\n                photos: [],\r\n                isLoading: true\r\n            }))\r\n            const response = await photosApi.getAllPhotos()\r\n\r\n            switch (response.status) {\r\n                case 200:\r\n                    dispatch(photosPageAction.setPhotos({\r\n                        photos: response.data,\r\n                        isLoading: true\r\n                    }))\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        getPhotos\r\n    }\r\n}","D:\\Рабочий стол\\imageViewer\\src\\helpers\\AnimatedLink\\index.tsx",[],"D:\\Рабочий стол\\imageViewer\\src\\components\\ui\\Image\\index.tsx",["181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":16,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"190","line":10,"column":9,"nodeType":"188","messageId":"189","endLine":10,"endColumn":20},{"ruleId":"186","severity":1,"message":"191","line":6,"column":9,"nodeType":"188","messageId":"189","endLine":6,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":18,"column":17,"nodeType":"194","endLine":18,"endColumn":39},{"ruleId":"192","severity":1,"message":"193","line":21,"column":17,"nodeType":"194","endLine":21,"endColumn":40},{"ruleId":"192","severity":1,"message":"193","line":24,"column":17,"nodeType":"194","endLine":24,"endColumn":40},{"ruleId":"186","severity":1,"message":"195","line":7,"column":9,"nodeType":"188","messageId":"189","endLine":7,"endColumn":26},{"ruleId":"196","severity":1,"message":"197","line":16,"column":8,"nodeType":"198","endLine":16,"endColumn":10,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":20,"column":7,"nodeType":"198","endLine":20,"endColumn":9,"suggestions":"201"},{"ruleId":"186","severity":1,"message":"202","line":4,"column":26,"nodeType":"188","messageId":"189","endLine":4,"endColumn":43},{"ruleId":"186","severity":1,"message":"203","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":23,"column":13,"nodeType":"194","endLine":23,"endColumn":34},{"ruleId":"196","severity":1,"message":"204","line":32,"column":8,"nodeType":"198","endLine":32,"endColumn":21,"suggestions":"205"},{"ruleId":"196","severity":1,"message":"206","line":35,"column":8,"nodeType":"198","endLine":35,"endColumn":10,"suggestions":"207"},{"ruleId":"186","severity":1,"message":"208","line":1,"column":8,"nodeType":"188","messageId":"189","endLine":1,"endColumn":13},{"ruleId":"186","severity":1,"message":"209","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":17},{"ruleId":"196","severity":1,"message":"210","line":32,"column":8,"nodeType":"198","endLine":32,"endColumn":21,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":13,"column":13,"nodeType":"194","endLine":13,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":14,"column":13,"nodeType":"194","endLine":14,"endColumn":16},{"ruleId":"196","severity":1,"message":"214","line":16,"column":8,"nodeType":"198","endLine":16,"endColumn":10,"suggestions":"215"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":20,"nodeType":"188","messageId":"189","endLine":1,"endColumn":29},{"ruleId":"186","severity":1,"message":"216","line":1,"column":31,"nodeType":"188","messageId":"189","endLine":1,"endColumn":39},{"ruleId":"217","severity":1,"message":"218","line":22,"column":18,"nodeType":"219","messageId":"220","endLine":22,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":25,"column":18,"nodeType":"219","messageId":"220","endLine":25,"endColumn":20},{"ruleId":"217","severity":1,"message":"221","line":25,"column":29,"nodeType":"219","messageId":"220","endLine":25,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":36,"column":70,"nodeType":"219","messageId":"220","endLine":36,"endColumn":72},{"ruleId":"186","severity":1,"message":"222","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":19},{"ruleId":"186","severity":1,"message":"223","line":8,"column":9,"nodeType":"188","messageId":"189","endLine":8,"endColumn":20},{"ruleId":"186","severity":1,"message":"224","line":9,"column":9,"nodeType":"188","messageId":"189","endLine":9,"endColumn":29},{"ruleId":"196","severity":1,"message":"225","line":11,"column":25,"nodeType":"188","endLine":11,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":32,"column":13,"nodeType":"194","endLine":32,"endColumn":35},{"ruleId":"196","severity":1,"message":"226","line":33,"column":7,"nodeType":"198","endLine":33,"endColumn":9,"suggestions":"227"},{"ruleId":"217","severity":1,"message":"218","line":41,"column":47,"nodeType":"219","messageId":"220","endLine":41,"endColumn":49},{"ruleId":"186","severity":1,"message":"228","line":4,"column":9,"nodeType":"188","messageId":"189","endLine":4,"endColumn":22},{"ruleId":"186","severity":1,"message":"229","line":5,"column":28,"nodeType":"188","messageId":"189","endLine":5,"endColumn":47},{"ruleId":"186","severity":1,"message":"230","line":5,"column":9,"nodeType":"188","messageId":"189","endLine":5,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":29,"column":13,"nodeType":"194","endLine":33,"endColumn":15},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userPageApi' is defined but never used.","'AnimatedLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useThunkConnector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'thunk'. Either include them or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["234"],"'userPageSelectors' is defined but never used.","'userPageThunk' is defined but never used.","React Hook useEffect has missing dependencies: 'cleanPhotos', 'dispatch', and 'thunk'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'cleanPhotos'. Either include it or remove the dependency array.",["236"],"'React' is defined but never used.","'albumIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'albumsThunkConnector', 'dispatch', and 'userThunk'. Either include them or remove the dependency array.",["237"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'dispatch' and 'userThunk'. Either include them or remove the dependency array.",["238"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useHistory' is defined but never used.","'useDispatch' is defined but never used.","'albumsReducerActions' is defined but never used.","The ref value 'rootElemRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'rootElemRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'currentAlbum', 'dispatch', 'setAlbum', 'thunk', and 'thunkConnector'. Either include them or remove the dependency array.",["239"],"'albumsReducer' is defined but never used.","'IGetSomethingByUser' is defined but never used.","'IGetPhotosByAlbum' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [dispatch, thunk]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch]",{"range":"256","text":"257"},"Update the dependencies array to be: [cleanPhotos, currentUser, dispatch, thunk]",{"range":"258","text":"259"},"Update the dependencies array to be: [cleanPhotos]",{"range":"260","text":"261"},"Update the dependencies array to be: [albumsThunkConnector, currentUser, dispatch, userThunk]",{"range":"262","text":"263"},"Update the dependencies array to be: [dispatch, userThunk]",{"range":"264","text":"265"},"Update the dependencies array to be: [currentAlbum, dispatch, setAlbum, thunk, thunkConnector]",{"range":"266","text":"267"},[630,632],"[dispatch, thunk]",[677,679],"[dispatch]",[1099,1112],"[cleanPhotos, currentUser, dispatch, thunk]",[1171,1173],"[cleanPhotos]",[1230,1243],"[albumsThunkConnector, currentUser, dispatch, userThunk]",[589,591],"[dispatch, userThunk]",[1194,1196],"[currentAlbum, dispatch, setAlbum, thunk, thunkConnector]"]